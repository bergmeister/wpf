<Project>
  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.GenAPI" Version="$(MicrosoftDotNetGenAPIVersion)" GeneratePathProperty="true"
                      Condition="'$(GenerateReferenceAssemblySource)'=='true'"/>
  </ItemGroup>

  <PropertyGroup Condition="'$(GenerateReferenceAssemblySource)'=='true'">
    <!-- 
      By default, GenAPI's target (GenerateReferenceAssemblySource) generates code into $(TargetDir).
      Instead, WPF generates into the ref directory in the project's source tree.
    -->
    <GenAPITargetDir>$(IntermediateOutputPath)ref\</GenAPITargetDir>
    <GenAPITargetPath>$(GenAPITargetDir)$(AssemblyName).cs</GenAPITargetPath>
  </PropertyGroup>

  <Target Name="EnsureGenAPITargetDirectory" 
          BeforeTargets="GenerateReferenceAssemblySource" 
          Condition="!Exists('$(GenAPITargetDir)')">
    <MakeDir Directories="$(GenAPITargetDir)" />
  </Target>

  <!-- 
    Generates a reference assembly project that builds the generated sources from GenAPI.
  -->
  <Target Name="BuildReferenceAssemblyFromSource"
          AfterTargets="GenerateReferenceAssemblySource"
          Condition="'$(GenerateReferenceAssemblySource)' == 'true'" >

    <PropertyGroup>
      <ReferenceAssemblyProjectFile>$(IntermediateOutputPath)ref\$(MSBuildProjectName)-ref.csproj</ReferenceAssemblyProjectFile>
    </PropertyGroup>

    <ItemGroup>
      <ReferenceAssemblyProjectContents Include="ProjectHeader">
        <!-- 
            In the CDATA section that follows, 
              %40 ~= @
              %25 ~= % 
              %3B ~= ;
              %24 ~= $
          -->
        <Text>
          <![CDATA[
<Project Sdk="Microsoft.NET.Sdk" InitialTargets="EnumerateAdditionalNugetReference%3BEnumerateAdditionalProjectReference">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <Platforms>AnyCPU%3Bx64</Platforms>
  </PropertyGroup>
  ]]>
        </Text>
      </ReferenceAssemblyProjectContents>

      <!-- 
        We need a reference to Microsoft.DotNet.Wpf.GitHub when building from dotnet-wpf-int. 
        When building from dotnet/wpf, this reference is not needed.
      -->
      <ReferenceAssemblyProjectContents Include="MicrosoftDotNetWpfGitHubPackageReference" Condition="'$(RepoLocation)'=='Internal'">
        <Text>
          <![CDATA[
  <ItemGroup>
    <PackageReference Include="$(MicrosoftDotNetWpfGitHubPackage)" Version="$(MicrosoftDotNetWpfGitHubVersion)" />
  </ItemGroup>
  ]]>
        </Text>
      </ReferenceAssemblyProjectContents>
      <ReferenceAssemblyProjectContents Include="ProjectBody">
        <Text>
          <![CDATA[
  <!-- Ensure that LimitMicrosoftDotNetWpfGitHubReferences target doesn't run --> 
  <PropertyGroup>
    <DoNotLimitMicrosoftDotNetWpfGitHubReferences>true</DoNotLimitMicrosoftDotNetWpfGitHubReferences>
  </PropertyGroup>
  
  <Target Name="EnumerateAdditionalProjectReference"
          BeforeTargets="_GenerateRestoreGraph"
          Condition="'%24(AdditionalProjectReferences)'!=''"
          Returns="%40(ProjectReference)">
     <ItemGroup>
       <_AdditionalProjectReferences Remove="%40(_AdditionalProjectReferences)" />
       <_AdditionalProjectReferences Include="%24(AdditionalProjectReferences)" />
       
       <ProjectReference Include="%24([System.String]::Copy('%25(_AdditionalProjectReferences.Identity)'))" />
       
     </ItemGroup>
  </Target>
  
  <Target Name="EnumerateAdditionalNugetReference"
          BeforeTargets="_GenerateRestoreGraph"
          Condition="'%24(AdditionalPackages)'!=''"
          Returns="%40(PackageReference)">
     <ItemGroup>
       <_AdditionalPackages Remove="%40(_AdditionalPackages)" />
       <_AdditionalPackages Include="%24(AdditionalPackages)" />
       
       <PackageReference Include="%24([System.String]::Copy('%25(_AdditionalPackages.Identity)').Split('+')[0])" 
                         Version="%24([System.String]::Copy('%25(_AdditionalPackages.Identity)').Split('+')[1])" />
       
       <AdditionalNugetIds Remove="%40(AdditionalNugetIds)" />
       <AdditionalNugetIds Include="%24([System.String]::Copy('%25(_AdditionalPackages.Identity)').Split('+')[0])" />
     </ItemGroup>
  </Target>
  
</Project>]]>
        </Text>
      </ReferenceAssemblyProjectContents>
    </ItemGroup>

    <MakeDir Condition="!Exists('$(IntermediateOutputPath)ref\')"
             Directories="$(IntermediateOutputPath)ref\" />

    <Delete Files="$(ReferenceAssemblyProjectFile)" Condition="Exists('$(ReferenceAssemblyProjectFile)')" />

    <WriteLinesToFile Lines="%(ReferenceAssemblyProjectContents.Text)"
                      File="$(ReferenceAssemblyProjectFile)"
                      Overwrite="false"/>

    <PropertyGroup>
      <!-- 
        Some packages can enable behaviors (targets, etc) that we do not want to run on 
        generated reference assembly code.  This filter exists to limit what PackageReferences 
        reach the reference assembly project so we don't enable them.
        
        Note:
          We exclude all code analysis since the generated hollowed out file will run afoul of many rules.
      -->
      <PackageReferenceExclusions>
        Microsoft.DotNet.CodeAnalysis;
        Microsoft.CodeAnalysis.Common;
        Microsoft.CodeAnalysis.FxCopAnalyzers;
        System.Runtime.Analyzers;
        System.Runtime.InteropServices.Analyzers;
      </PackageReferenceExclusions>
    </PropertyGroup>
    
    <!-- 
    Do not build - just ask ResolveReferences + IdentifyNetCoreReferences for the information
    we are looking for, namely the list of .NET Core Sdk references. 
    -->
    <ItemGroup>
      <!-- 
        Add all PackageReferences from the runtime project that is generating the reference assembly apart from
        anything that has been implicitly added (via FrameworkReferences, etc) or is explicitly excluded.
      -->
      <_AdditionalPackageReferences Include="@(PackageReference)" Condition="'%(PackageReference.IsImplicitlyDefined)'!='true' 
                                                                              and !$(PackageReferenceExclusions.Contains('%(PackageReference.Identity);'))" />
      <_AdditionalProjectReferences Include="@(ProjectReference)" />
      <ProjectToBuild Remove="@(ProjectToBuild)" />
      <ProjectToBuild Include="$(ReferenceAssemblyProjectFile)">
        <AdditionalProperties>AdditionalPackages=@(_AdditionalPackageReferences->'%(Identity)+%(Version)');AdditionalProjectReferences=@(_AdditionalProjectReferences->'%(Identity)')</AdditionalProperties>
      </ProjectToBuild>
    </ItemGroup>
    <MSBuild Projects="@(ProjectToBuild)"
             Targets="Restore;Build"
             Properties="TargetFramework=$(TargetFramework);Platform=$(Platform);RuntimeIdentifier=$(RuntimeIdentifier)">
    </MSBuild>
  </Target>
  
</Project>
